import Head from 'next/head'
import Image from 'next/image'
import MyButton from '../comps/Button'
import NavBar from '../comps/Nav'
import MyTrack from '../comps/TrackInfo'

import Playlist from '../comps/Playlist'
import SbButton from '../comps/SbButton'
import Toggle from '../comps/Toggle'
import MyText from '../comps/Text'
import { themes } from '../utils/variables'
import { useTheme, useTitle, useHeader, usePar } from "../utils/provider";
import styled from 'styled-components';
import { device } from '../styles/mediaSizes'
import MySwitch from '../comps/Switch'
import Slider from '../comps/Slider'
import { useEffect, useState } from 'react'

const Page = styled.div`
  display:flex;
  flex-direction: row;
  margin:0;
  justify-content: space-between;
`;

const Dashboard = styled.div`
    background-color: ${props => props.bg};
    height:100vh;
    width:100%;
    padding:10px 10px 10px 60px;


    @media ${device.mobile}{

    }

    @media ${device.tablet}{
    }

    @media ${device.desktop}{
       
    }
`;

const SbCont = styled.div`
  display: flex;
  flex-wrap: wrap;
  width: 630px;
  height:180px;
  justify-content: space-evenly;
  padding-left: 30px;
`;
const SliderCont = styled.div`
  display: flex;
  flex-wrap: wrap;
  width: 750px;
  justify-content: space-evenly;
  padding-left: 30px;
`;

const SpaceCont = styled.div`
display: flex;
width: 90%;
padding-left: 5px;

justify-content: space-between;
`;

const RegCont = styled.div`
  padding-left: 30px;
  overflow-y: scroll;
  height:160px;
`;
const Divider = styled.div`
    background-color: ${props => props.color};
    width:90%;
    height:1px;
`;



export default function Home() {

  const { theme } = useTheme();
  const [selected, setSelected] = useState(null)

  const { titleSize } = useTitle();
  const { headerSize } = useHeader();
  const { parSize } = usePar();



  return (
    <>
      <Head>
        <title>botBot</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="#" />
      </Head>
      <Page>
        <NavBar />

        <Dashboard
          // width={`${dashWidth}px`}
          bg={themes[theme].contrast}>
          <MyText
            text={`Welcome ZoÃ«!`}
            size={`${titleSize}px`}
          />
          <MyText
            text='Genres'
            size={`${headerSize}px`}
          />

          <SbCont>
            <SbButton
              onClick={() => setSelected('country')}
              color={selected === 'country' ? themes[theme].accent1 : themes[theme].highlight}
              text='Country' />
            <SbButton
              onClick={() => setSelected('dance')}
              color={selected === 'dance' ? themes[theme].accent1 : themes[theme].highlight}
              text='Dance' />
            <SbButton
              onClick={() => setSelected('hipHop')}
              color={selected === 'hipHop' ? themes[theme].accent1 : themes[theme].highlight}
              text='Hip Hop' />
            <SbButton
              onClick={() => setSelected('house')}
              color={selected === 'house' ? themes[theme].accent1 : themes[theme].highlight}
              text='House' />
            <SbButton
              onClick={() => setSelected('indie')}
              color={selected === 'indie' ? themes[theme].accent1 : themes[theme].highlight}
              text='Indie' />
            <SbButton
              onClick={() => setSelected('jazz')}
              color={selected === 'jazz' ? themes[theme].accent1 : themes[theme].highlight}
              text='Jazz' />
            <SbButton
              onClick={() => setSelected('kPop')}
              color={selected === 'kPop' ? themes[theme].accent1 : themes[theme].highlight}
              text='K-pop' />
            <SbButton
              onClick={() => setSelected('pop')}
              color={selected === 'pop' ? themes[theme].accent1 : themes[theme].highlight}
              text='Pop' />
            <SbButton
              onClick={() => setSelected('metal')}
              color={selected === 'metal' ? themes[theme].accent1 : themes[theme].highlight}
              text='Metal' />
            <SbButton
              onClick={() => setSelected('rb')}
              color={selected === 'rb' ? themes[theme].accent1 : themes[theme].highlight}
              text='R&amp;B' />
            <SbButton
              onClick={() => setSelected('rap')}
              color={selected === 'rap' ? themes[theme].accent1 : themes[theme].highlight}
              text='Rap' />
            <SbButton
              onClick={() => setSelected('raggae')}
              color={selected === 'raggae' ? themes[theme].accent1 : themes[theme].highlight}
              text='Raggae' />
            <SbButton
              onClick={() => setSelected('rock')}
              color={selected === 'rock' ? themes[theme].accent1 : themes[theme].highlight}
              text='Rock' />
            <SbButton
              onClick={() => setSelected('trap')}
              color={selected === 'trap' ? themes[theme].accent1 : themes[theme].highlight}
              text='Trap' />
          </SbCont>
          <MyText
            text='How do you feel?'
            size={`${headerSize}px`}
          />
          <SliderCont>
            <Slider text='Acounticness' />
            <Slider text='Danceability' />
            <Slider text='Energy' />
            <Slider text='Instrumentals' />
            <Slider text='Loudness' />
            <Slider text='Tempo' />
          </SliderCont>
          <SpaceCont>
            <MyText
              text='Generated Tracks'
              size={`${headerSize}px`}
              color={themes[theme].focus}
            />
               <MyButton
              text='save all' />
          </SpaceCont>

            <Divider
              color={themes[theme].focus} />
          <RegCont>
            <MyText
              text='Tracks not yet generated'
              size={`${parSize}px`}
            />
            <MyTrack />
            <MyTrack />
            <MyTrack />
            <MyTrack />
            <MyTrack />
          </RegCont>


          {/* <MyTrack /> */}


        </Dashboard>

      </Page>
    </>
  )
}
